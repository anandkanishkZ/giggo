rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - authenticated users can read any user's basic profile data
    // but can only write their own data
    match /users/{userId} {
      allow read: if request.auth != null; // Allow reading any user's profile for contact details
      allow write: if request.auth != null && request.auth.uid == userId; // Only write own data
    }
    
    // Notifications collection - authenticated users can read notifications sent to them
    // and create notifications for others
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
                 (resource.data.recipientUserId == request.auth.uid || 
                  resource.data.senderUserId == request.auth.uid);
      allow write: if request.auth != null;
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.senderUserId;
      allow update: if request.auth != null && 
                   request.auth.uid == resource.data.recipientUserId;
      allow delete: if request.auth != null && 
                   request.auth.uid == resource.data.recipientUserId;
    }
    
    // Email queue - authenticated users can create emails
    match /emailQueue/{emailId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Gigs collection - authenticated users can read all, create their own, update their own
    match /gigs/{gigId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
                           request.auth.uid == resource.data.userId;
    }
    
    // Gig drafts collection - authenticated users can manage their own drafts
    match /gig_drafts/{draftId} {
      allow read, write: if request.auth != null && 
                        (request.auth.uid == resource.data.userId || 
                         request.auth.uid == request.resource.data.userId);
    }
    
    // Test collection for debugging
    match /test/{testId} {
      allow read, write: if request.auth != null;
    }
  }
}
